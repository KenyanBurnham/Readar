Background: In our previous Blackboard Redesign Analysis, we, Group 4, proposed augmenting asynchronous writing classes with a Practice Submission Portal that leveraged computer-assisted feedback to provide revision suggestions for students in an asynchronous writing class. This independent research paper expands on the technology that would make this Practice Submission Portal possible and outlines the impact that Computer-Assisted Feedback (CAF) systems can have on local and global cultures.

This project defines culture and its connection to language, then what defines a computer-assisted feedback system, the technologies this definition encompasses, and its adoption in the consumer industry space. An example interaction is outlined using a fictional actor, which is then mapped to an activity triangle. The interaction is then analyzed, and a solution to strengthen the interaction is proposed. This research paper concludes by debriefing the findings of this paper and proposing future areas of research that could further extend this work.

Culture and Language: In previous research Thomas and Inkson's definition of culture was used to outline the inclusive and exclusive aspects of culture: [C]ulture is something that a group has in common that is not normally available to people outside of the group. It is mental programming held in common that enables insiders to interact with each other with a special intimacy denied to outsiders. (Thomas and Inkson, 2017, p. 23)

Because CAFs involve users and the user's language it is also useful to expand this definition of culture by drawing on its relationship to language. Language can be understood as "fluid codes framed within social practices" (Garcia, 2011, p. 32) These codes are components of the mental programming shared by mutual members of a group. The codes used in this shared mental programming can undergo a constant process of change known as linguistic change, which occurs from the adoption of different norms with subgroups over time, as Coates describes:  [l]inguistic change can be said to have taken place when a new linguistic form, used by some sub-group within a speech community, is adopted by other members of that community and accepted as the norm (Coates, 1992, pg. 169)

There are often subtle variations and uneven adoption within a language's use and as linguistic practices are adopted by larger groups and communities, standards and notions of "correctness" are created: "Once a standard was accepted and codified, then forms which deviated from this standard were frowned on as 'incorrect'." (Coates, 1992, pg. 16) These standards are often recorded in dictionaries and other lexicons as part of a prescriptive language use effort. Linguistic prescription is the intentional codification of a language. (Linguistic Prescription). Prescriptive dictionaries advocate and define "correct use", whereas descriptive dictionaries record "actual us" (Linguistic Prescription). These codes, whether recorded or prescribed form the standard practices of a language. Cultures that adopt or reject certain practices or words within a language shape the linguistic norms within a given community.

The Technology: For the purpose of this research paper, computer-assisted feedback is defined as: "A digital system that provides users with information given a text input." CAF systems are primarily composed of technologies referred to as spell-checkers or grammar checkers, although readability checkers and template creators are also included in this technology group. A spell-checker is a software feature that checks for misspelling of text based on a prescriptive dictionary. (Spell checker) A grammar-checker is a program that verifies written text for grammatical correctness. (Grammar checker). With the definition described above, it's possible to account for the wide variety of feedback platforms that input text and output information.
Typically, a writer submits text, or a draft of their writing, to a computer system and the system analyzes the writing and provides revision suggestions or corrections. The writer then uses this feedback to inform their revision or correct their writing. These systems can rely on established conventions set by the developer or they can rely on a subfield of linguistics and computer science called Natural Language Processing (NLP). This field is concerned with the interaction of computers and users through their language. (Natural Language Processing) NLP works by combining lexicons and libraries developed on a particular language with machine learning to interpret user inputs and make recommendations.

History: One of the first CAF systems, a spell checker with 10,000 accepted words, was conceived in the 1961 by Les Earnest. A graduate student studying under Earnest, Ralph Gorin, would create the first English spell checker application; aptly named "SPELL". (Spell checkers) Spell checkers initially functioned as "verifiers", not "correctors". They would be able to identify and notify a user that a word was misspelled, but they could not make recommendations or auto-correcting measures. (Spell checker) It was also during the 1970s that the first grammar checkers were deployed. The earliest grammar tools analyzed punctuation use and style, rather than grammatical usage. One of the first grammar checkers was Writer's Workbench, which contained a suite of writing tools for the Unix system. (Grammar checker) The "style" tool included in Writer's Workbench would perform a readability test on the inputted text and output statistical information to the writer.

Although these programs were originally idealized to be standalone programs, by the 1980s large software suites like WordStar and WordPerfect had integrated spell checker and grammar checker functionality and standalone programs fell out of popular use. During the 1980s, spellcheckers were written for English, many European languages, and later for many Asian languages. Companies like WordPerfect continued to establish themselves globally by developing support for smaller language communities, like Scandinavian countries, despite how small the markets share was. The Firefox 2.0 release, in 2006, further pushed the global-to-local adoption of CAF technologies by integrating a spell-checker within the web browser itself. (Spell Checker) Recently, there has been a resurgence of standalone CAF systems, like Grammarly, which was first released to a consumer market in 2009. A decade later, they have 20 million daily active users. (Grammarly)

Modern Use: Today, in industry and the consumer market, writers of all backgrounds have access to platforms such as the Microsoft and Google text-editor suites as well as standalone plugins like Grammarly which provide feedback and suggestions on writing. These CAF systems help the writer decrease the amount of time proofreading, improve writing, more succinctly engage the author's contexts, and provide revision suggestions. One of the motivations for using CAF systems is its potential to reduce time proofreading, decreasing costs for a company or an individual. (Love2Edit and Purdue Writing Lab) CAF systems can reduce the time spent conditioning writing to cultural standard practices involved with language or they can be used to increase semantic variety, which strengthens engagement with the material. However, there are a host of experts and non-experts (Creighton 2019 and Johnson 2012) that disapprove or do not condone the use of spell-checkers for a variety of reasons. Geoffrey K. Pullum, a linguistic scholar, argued in 2007 that they were generally so inaccurate as to do more harm than good: "[F]or the most part, accepting the advice of a computer grammar checker on your prose will make it much worse, sometimes hilariously incoherent." (Grammar Checker) Whether CAF systems have positive or negative implications remains largely outside this work, but CAF systems are accessible to a global audience and detailing a user interacting with a CAF system could reveal what impact they can have on local and global audiences.

Example Interaction: An example of a CAF system interaction is described below. In this particular example, a student interacts with a CAF system to revise an assignment. An activity triangle, using actor theory/actor network theory (AT/ANT) is details the interaction. (Figure 1). To draw deeper insights from this interaction, a fictional actor is established and a fictional CAF system that combines some of the technologies introduced above is used.

The Fictional Actor: The fictional actor is Jaimee, a college student enrolled in a writing class. Jaimee is writing a final research paper on the wind-energy company: "Revolution360". After creating the first draft of the paper, they decide to use an online proofreading website called WriteImprover to help them revise and edit the paper. WriteImprover was recommended to Jaimee from a friend who said that the proofreader could suggest the best places to edit and correct. WriteImprover uses the latest machine-learning technologies to provide a spell checker, grammar checker, and a readability score after processing. With a fast-approaching deadline, Jaimee submits their assignment to the proofreading system.

Key Stakeholders / Actors: There are two stakeholders in this activity: Jaimee, the writing student and WriteImprover, a CAF Platform. Jaimee, referred to simply as the "Writing Student" in the activity triangle, is a non-expert writer, we can choose to define this in the sense that they do not have mastery over the language as perceived by an "expert" or that the student is in the process of gaining mastery regardless of "expert" qualification.

Division of Labor: Jaimee interacts with a CAF system by giving the program access to the assignment after the assignment's draft stage. WriteImprover parses through the information contained within the document and it returns information based on internal heuristics created by a developer or corporate entity.

Rules / Norms: The heuristics are the rules that govern how information is processed based on language customs decided by the developer or another entity. In this way, the language and the heuristics act as an external interaction between the user, the developer, and other involved parties. The lexicon serves as both a tool and as a source of rules and norms.

The Tools: The tools the CAF uses depends on the platform. The CAF system can be a standalone online processor, like expresso-app.com, an online web-app that returns grammatical, structural, and readability feedback. (Expresso App). It could be a multi-modal embedded platform, like Grammarly, that can be used on mobile, desktop, or within other text-editor suites. Or it could be a dedicated CAF system for one text-editor, like Microsoft or Google Pages. Each of these platforms use a variety of NLP technologies, lexical databases, and specific programming languages. In this activity, WriteImprover is an online web-app that uses multiple online repositories to process Jaimee's assignment.

Object / Objective: The objective of this activity is for Jaimee to get information from WriteImprover that will help them revise their assignment. With this information Jaimee relies on their academic background, their proficiency with their language, and insights from their community to use this information constructively. When Jaimee receives feedback from WriteImprover they must choose whether to accept the information and incorporate it into their assignment, or they can choose to ignore or reject some or all of the information.

Communities: Whether Jaimee chooses to adopt the information readily, hesitantly, or at all is a product of Jaimee's cultural background and group norms. Students like Jaimee who are cautioned by others, may be more likely to question WriteImprover's suggestions and the heuristics established within the CAF.

Example Results: After submitting their draft to the system, Jaimee is surprised at WriteImprover's recommendations. Below are a list of recommendations and reactions from Jaimee: Highlighted in red is the word "Revolution360". WriteImprover suggests that the word "plain" be replaced with the word "plaid". The word "whip" is highlighted in a sentence quoted from the wind-energy company. The word "spell" is misspelled as "sprll" and WriteImprover provides no suggestion as to how to fix it. The readability score is way lower than what Jaimee expected. Jaimee is frustrated by these results and is now questioning whether using a proofreader like WriteImprover was a great idea. To understand the results of Jaimee's feedback and the potential shortfalls of CAF systems the each of the recommendations will be explored.

Context: CAF systems create associations between words using statistical methods or using linear regression, which finds a best-fit curve between datapoints. These methods can consistently analyze a set of characters and draw a relationship with words that contain those characters, which are then used to diagnose misspelled words. A writer on Servicescape, a freelance editor and writer website, identifies one of the technical challenges that spell checkers present using these statistical methods: "[S]pell checkers can only detect if words are spelled correctly, not if they are used correctly." (Love2Edit, 2010) What Love2Edit is describing, is an issue of context, spell-checkers have only recently explored contextual spell-checking. (Spell checker) This problem is extended also to grammar-checkers that make recommendations for word choice. Grammar-checkers are given sample sets of words commonly associated with one-another; this can lead to a missed-context error or false diagnosis. One example of this missed-context problem comes from Jacob Brogan, a writer for a news outlet called Slate. Brogan entered the following sentence into Grammarly:  No matter what he's wearing, he almost always opts for long sleeves -here in an Apple Store uniform (just one of the team!), there in a plain sport shirt. (Brogan, 2018)

The result was Grammarly suggesting that "plain" be replaced with "plaid". A potential reason for this is that the samples used in the lexical library that Grammarly is using (which form the training set or data points for the program) contains the pairing of "plaid shirt" more often than the pairing of "plain shirt". As Brogan accounts: This is an instance of what I'm tempted to call the algorithmic uncanny valley, that point at which a program is astute enough to recognize that humans often pair shirt with plaid but not enough to understand that they also do so with plain. (Brogan, 2018)

This is one of the issues that Jaimee encounters in their feedback, WriteImprover tried to diagnose "sprll", but was unable to provide a solution, because it has no related sample to draw a statistical correlation. Although a writer could probably see that the letter "r" is right next to the letter "e" on the keyboard, and diagnose the mistake easily, WriteImprover could not. Another issue, which was directly taken from Brogan's example, was the misdiagnosis of "plaid shirt" for "plain shirt". WriteImprover can only make correlations from sample sets it has, it cannot extrapolate beyond associations within the sample set, unless the sample set is continually adapted. But even then, a problem would still exist, that the occurrence of these word pairing does not reflect the contextual use of words; even if "plaid shirt" is said more often than "plain shirt", it is not correct in this context.

Language and Lexicons: Jaimee encountered another issue when they quoted the company saying "whip" instead of "car". Although Jaimee understood what the representative of Revolution360 meant by "whip", WriteImprover did not, so it suggested a substitution within the quote. One of the core resources CAF systems, particularly spell-checkers, rely on is a lexicon for a given language. Researchers Hodge and Austin noted that: Spell checkers are somewhat dependent on the words in the lexicon. Some words have very few words spelled similarly, so even multiple mistakes will retrieve the correct word. Other words will have many similarly spelled words, so one mistake may make correction difficult or impossible. (Hodge and Austin, 2003, p. 1081)

Lexicons are prescriptive in nature, in that, the words defined within the lexicon also define the words use. (Linguistic Prescription) But word use is not static. As Coates identified earlier, languages, and the codes they use, are transient. (1992) The connotation of words can change over time; like the use of the word "gay". Syntactical elements can shift in a language; like the great vowel shift of the English language. Words and their roots can fall out of use, such as the root "were", which has only one existing use: "werewolf". Words can also be adopted or synthesized into another language, like "beautiful", which is borrowed from French. And new words are created or synthesized from existing lexical materials; consider the modern neologism: "yeet", or the word "pwned"; from "owned". Along with these linguistic forces the distribution of standards and new codes are not evenly adopted or known by every user of a given language. This can be a problem for lexicographers (dictionary specialists) or those that maintain online lexical databases. In reference to this phenomena, Grammarly states on their own site: "[E]veryone has a personal lexicon containing at least a few important, unique words that won't appear in the dictionary anytime soon." (How to Add New Words to Your Personal Dictionary: Grammarly Spotlight.) This personal lexicon is individual, but the words are shared within a local group. In reference to the activity mapped above, this personal lexicon could be a product of the Rules / Norms or the Community surrounding Jaimee, or, as in this scenario, it could be a product of the materials for Jaimee's assignment.

Interpretations and Subvocalizations: A CAF system doesn't account for regional distinctions and grammatical variety despite the shared language between two similar groups. This can yield a minor problem; such as a difference in accepted spelling of a proper name. This is one of the issues that Live2Edit cites in her argument against spell checkers: "Spell check cannot help you with some proper names, such as 'Heston' or 'Jolie.'" (Live2Edit, 2010) Many common names do already exist in lexicons, but there are always newer forms and hybridizations. A more complex manifestation of this issue occurs when proper names that represent a company or product include non-word characters, or when a username, like "Live2Edit" is used in a CAF system. When a Jaimee looks at the word "Revolution360", they internally express the name through subvocalization (reading in their head). Based on their regional accent and their country of origin, they could interpret this name very differently. Some possible interpretation are listed below: "Revolution three-sixty", "Revolution three hundred and sixty", and "Revolution three hundred sixty".

If the CAF system provides readability data, this is a problem. Readability formulas often make use of a ratio of syllables-to-words or sentence lengths to assess the "density" of a given body of text or a subsection. (Readability) For a complex expression of a proper noun, such as "Revolution360", that includes non-word text (numbers), which pose an additional technical challenge. For the three interpretations listen above, the syllable lengths could be: Or for the case of brevity, this word could have an internal (or externally shared) abbreviation as "Rev360", creating syllable counts 4, 7, and 6, respectively.

For this interaction between a software system and a user, there is a potential disconnect between how the CAF system interprets this type of proper noun, the result of its readability analysis, and how the user interprets the feedback it provides. Jaimee's readability score could have been skewed by how WriteImprover handles complex proper nouns. The developer (or more likely, team of developers) use their own Rules / Norms to create WriteImprover's algorithms, this local solution based on their interpretation has consequences on users like Jaimee, resulting in users distrusting WriteImprover's abilities.

Misuse and Misunderstanding: There are also external influences that affected this interaction. One of these influences is the how WriteImprover was advertised by Jaimee's friend group; this friend-group forms an important part of Jaimee's social community. The fictional CAF system, WriteImprover, is a product created by a corporation, the solutions it provides are not always transparent and could be advertised in an intentionally or unintentionally misleading way. Or the product may lack a thoroughly researched or tested NLP system. In Fritjof Capra's, Web of Life, Capra traces the implications of natural language processing in consumer interactions and warns that: Unfortunately there is a striking dissonance between serious critical assessments of AI and the optimistic projections of the computer industry, which are strongly motivated by commercial interests. (Capra, 1997, p. 277)

These commercial interests may have motivated how reliable WriteImprover is as a product and Jaimee may not have the ability to make a critical assessment of WriteImprover as a product. Jaimee is a "non-expert" writer and may never have been warned about the heuristics and fallibility of a CAF system, have been cautioned by their peer group, or received any formal education on how to assess the result of a CAF system properly. If Jaimee had a resource that would have helped them better understand the capabilities of CAF systems both WriteImprover and Jaimee would benefit.

Improving the Interaction: There are a host of technical solutions that are currently deployed or in development that could serve to improve the shortfalls of a user's interaction with CAF systems like WriteImprover. There are also a host of systemic changes that could serve to improve the connection between the users of a CAF system and the company who develops the system.

Personalizing the Lexicon: One of the solutions for improving spell-checker and grammar-checker accuracy within a CAF system is to include a mechanism for adding to its lexicon. Grammarly already has a personal dictionary function that allows users to add new to the lexicon, thus improving which words the program will highlight. (How to Add New Words to Your Personal Dictionary: Grammarly Spotlight.) Microsoft Word also has a similar function with its "Add to dictionary" and "Ignore all" functionalities. In reference to the example activity, this would shape the Rule / Norms of a Community the Actor is involved within into one of the tools that makes a CAF system more effective. By including an editable lexicon, a CAF system like WriteImprover, has the ability to improve the local interaction, by allowing the user to introduce new words and new word usages that better serve their context. This functionality would allow the lexicon to behave descriptively, where the actual use of a given word is used, not the prescribed use of the word. With a personalized lexicon, users from a variety of cultural contexts would benefit as well. If a writer is composing a speech for a particular audience, then they can build a specific lexicon of code words that they can use to engage a specific context. If a writer was specifically writing to an audience that responds well to biblical references, then creating a personalized lexicon that will not highlight repeated use of "and" would drastically improve the writer's experience with the CAF system.

Improving Interpretation Capabilities: A similar solution could be prescribed for complex proper nouns that include non-word characters. For this application, the inclusion of an interpretation function with pseudo-phonetic spelling could serve to personalize the CAF systems lexicon to the user, while also serving to better connect the context within writing. This system, when it encounters a word with non-word characters, would highlight the word and ask for a pseudo phonetic spelling. An example could be "Live two edit" for "Live2Edit". Although adopting a standardized phonetic approach, by using a library similar to the International Phonetic Alphabet (IPA) could be advantageous, expecting writers to learn the phonetic rules could be problematic. (International Phonetic Alphabet)

Improved Context: Although there are a number of context-sensitive spell checkers system currently in development that could reduce the number of false flags or misdiagnoses a CAF system could provide, another solution would be to augment the existing systems with a recurrent feedback system. (Spell-checker) The CAF system would track which highlighted corrections a specific user ignores or uses and could use this data to further extrapolate better solutions. By improving the dialogue users have with CAF systems, both the interaction and context-sensitivity of CAF systems could be drastically improved.

Improved Dialogue: One of the problems Jaimee encountered in their interaction was a lack of dialogue within their own community and from WriteImprover itself. Dialogue needs to come from both sides; from the company that designs the CAF system and from the student's community. Companies that design CAF systems need to provide a resource for understanding their metrics and heuristics, so that users can better understand the feedback the system provides. Expresso-App can serve as an example, they provide a full list of metrics and how the system works. (Expresso-App). Users of CAF systems also need resources from their community to better understand how to use systems like WriteImprover effectively. An example could be Purdue Writing Lab, which provides specific guidance on how to use CAF systems.  (Purdue Writing Lab) By including these features and by facilitating more dialogue around CAF systems, an interaction like Jaimee and WriteImprover's could be substantially improved for all users.

Conclusion: The inclusion of these recommendations will allow CAF systems the ability to adapt to linguistic change by maintain a more fluid lexicon. By lowering the rigidity of the lexicon, the CAF can personalize the context of the writing feedback to the user. By increasing the dialogue within and about CAF systems, the overall practices, technologies, and user-base surrounding CAF systems stands to improve. This functionality will offer companies who create CAF systems the ability to tailor to localized audiences, by extending the user's ability to create meaningful dialogue with the CAF systems.

Looking Forward: One of the major limitations of this research paper, is the reliance on secondary sources to find the potential cultural disconnects between the user and the CAF technologies. The testimonials used for the fictional narrative mostly revolve around the well-known Grammarly platform. (Live2Edit, Brogan, Creighton) In further extensions of this research more platforms should be assessed and an increased reliance on primary experimental research would better support the recommendations described above.
Further work could also be done to extend this research to predictive CAF systems. The CAF systems described in this research paper are limited to the forensic analysis of writing. There already exist a host of research initiatives exploring predictive CAF systems that can create templates for genres of writing such as love letters or automatically drafted technical documentation. (Liu et al, 2010 and Reiter et al, 1995)
Lastly, the extent of CAF systems and their implications for English as a Second Language (ESL) users is not realized in this research but could serve as a future extension to this work.
Looking forward, there are many unexplored opportunities that could illustrate the powerful connections CAF systems facilitate for both local and global audiences.
