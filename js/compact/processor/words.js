let Words = {
    globalWords: [],
    words: [],
    wordCount: 0,
    wordLengths: [],
    syllables:[],
    breaths: [],
    reset: function(){
        // Set all global data to empty
        this.globalWords = [];
        this.words = [];
        this.wordCount = 0;
        this.wordLengths = [];
        this.syllables = [];
        this.breaths = [];
    },
    processWords: function(sentence, caller){
        //remove all non-word characters
        sentence = sentence.replace(/[\W_]+/g," ");
        //Split words from sentence by spaces
        let words = sentence.split(" ");
        //Define a new Word Bank
        let Bank = new Object;
        //Initailize empty arrays for word lengths, how many, and the words themselves
        Bank.lengths = [];
        Bank.count = 0;
        Bank.words = [];
        Bank.syllables = [];
        Bank.breaths = [];
        //Initialize a wordCount variable
        let wordCount = 0;
        //For each of the words generated by the split
        words.forEach(function(word){
              //Run throrough test on word to determine what action needs to happen
              let testResuts = Interpreter.testWord(word);
              if((testResults.containsInterpretation == true)){
                  //Then the word is already known

                      //word.length stays the same
                      //syllables is counted on Interpreter.abstract[word]
                      //get breath unit
                      //save abstract as word
                      //increase word count by one

              }
              if((testResults.containsInterpretation == false)){
                  //Then there is no interpretation
                  if((testResults.containsUnresolved == true)){
                      //If there is no intepretation a known unresolved word?

                      // Then we need to process this by finding the length
                      // Making a length = 0 and syllables = 0
                      // breath = 0
                  }
                  if((testResults.containsUnresolved == false)){
                      //If there is no unresolved, add top unresolved

                      //Add word to unresolved
                  }
              }
              if((testResults.containsNumber == true) && (testResults.containsInterpretation == true)){
                  //Then the word is already known
              }
            /*
            Need to ask whether the word is a number,
            if it has a length greater than zero,
            if there is Interpretation
            and if there is an unreseolved interpretation
            */
                //Continue if normal
                if(Interpreter.testForNumber(word) == true){
                    //If it's a normal word with length greater than 0
                    if(word.length > 0){

                        wordCount = wordCount + 1;
                        let syllableCount = getSyllableCount(word);

                        //Local Word Bank
                        Bank.syllables.push(syllableCount);
                        //Add a copy of the word in the word Bank
                        Bank.words.push(word);
                        //Add word lengths to the word Bank
                        Bank.lengths.push(word.length);
                        //Create breath unit variable
                        let breath = (word.length/syllableCount).toFixed(2);
                        //Add breath units to local word Bank
                        Bank.breaths.push(breath);

                        //Add syllable counts to global Word Bank
                        Words.syllables.push(syllableCount);
                        //Add word to the global Words
                        Words.globalWords.push(word);
                        //Add length to the global Words
                        Words.wordLengths.push(word.length);
                        //Add breath unit to global Words
                        Words.breaths.push(breath);

                        //Push word into Document word bank
                        if(caller == "sentence"){
                            //Push words to Document word bank
                            Document.words.push(word);
                            //Push reference key to word
                            Document.wordKeys.push(createKey());
                        }
                    }
                //Do not add word to word bank, putword in special case bank
                }else{
                    if(caller == "sentence"){
                        //Ask if there's an interpretation
                        //Ask if it's unresolved
                        console.log("The word: " + word);
                        console.log("Test if there's an unresolved Interpretation: " + Interpreter.testForUnresolved(word));
                        console.log("Test if there is an interpretation: " + Interpreter.testForInterpretation(word));
                        if (Interpreter.testForInterpretation(word) == true) {
                            let interpretation = Interpreter.getInterpretation(word);
                            console.log("How we will interpret the word: " + interpretation);
                            console.log("Length we will show: " + word.length);
                            console.log("Syllable Count we will show: " + getSyllableCount(interpretation));
                        }

                        // There's still a word here, so it counts, but can't be processed
                        wordCount = wordCount + 1;
                    }
                }
        });
        //Add the number of words to the Bank
        Bank.count = wordCount;
        //Push copy of word bank into global word bank
        Words.wordCount = wordCount;
        //Return Bank to Sentences
        return Bank;
    },
}
